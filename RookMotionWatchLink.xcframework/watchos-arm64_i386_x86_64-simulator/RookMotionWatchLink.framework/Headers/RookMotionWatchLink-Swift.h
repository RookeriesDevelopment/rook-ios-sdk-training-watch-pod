#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
#ifndef ROOKMOTIONWATCHLINK_SWIFT_H
#define ROOKMOTIONWATCHLINK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import Foundation;
@import HealthKit;
@import ObjectiveC;
@import WatchConnectivity;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RookMotionWatchLink",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

SWIFT_CLASS("_TtC19RookMotionWatchLink20AuthorizationManager")
@interface AuthorizationManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19RookMotionWatchLink15BackGroundTasks")
@interface BackGroundTasks : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC19RookMotionWatchLink18RWClientValidation")
@interface RWClientValidation : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class WCSession;
@class NSString;

SWIFT_PROTOCOL("_TtP19RookMotionWatchLink23RWCommunicationDelegate_")
@protocol RWCommunicationDelegate
- (void)session:(WCSession * _Nonnull)session messageData:(NSDictionary<NSString *, id> * _Nonnull)messageData;
- (void)session:(WCSession * _Nonnull)session userInfo:(NSDictionary<NSString *, id> * _Nonnull)userInfo;
@optional
- (void)session:(WCSession * _Nonnull)session message:(NSDictionary<NSString *, id> * _Nonnull)message;
- (void)userInfoSaved:(WCSession * _Nonnull)session watchMessage:(NSDictionary<NSString *, id> * _Nonnull)watchMessage;
@end


SWIFT_CLASS("_TtC19RookMotionWatchLink22RWCommunicationManager")
@interface RWCommunicationManager : NSObject <WCSessionDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)session:(WCSession * _Nonnull)session activationDidCompleteWithState:(WCSessionActivationState)activationState error:(NSError * _Nullable)error;
- (void)session:(WCSession * _Nonnull)session didReceiveUserInfo:(NSDictionary<NSString *, id> * _Nonnull)userInfo;
- (void)session:(WCSession * _Nonnull)session didReceiveMessage:(NSDictionary<NSString *, id> * _Nonnull)message replyHandler:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull))replyHandler;
@end


SWIFT_PROTOCOL("_TtP19RookMotionWatchLink12RemoteEvents_")
@protocol RemoteEvents
- (void)userBannedFromClass;
- (void)classHasFinished;
@optional
- (void)internetProblems;
- (void)realtimeDataSended;
@end


SWIFT_CLASS("_TtC19RookMotionWatchLink12RemoteRouter")
@interface RemoteRouter : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19RookMotionWatchLink19ReposiryUserIndexes")
@interface ReposiryUserIndexes : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The <code>RepositoryTraining</code> class handle the request and storage of the information in the local data base.
/// To use this class first a user have to be stored in the local data base. If there is not user stored, the methods will fail
/// The next methos are available:
/// <ol>
///   <li>
///     addSensor
///   </li>
///   <li>
///     uploadPendingSensors
///   </li>
///   <li>
///     getUserSensors
///   </li>
///   <li>
///     getSensorUUID
///   </li>
///   <li>
///     uploadPendingTrainings
///   </li>
/// </ol>
SWIFT_CLASS("_TtC19RookMotionWatchLink18RepositoryTraining")
@interface RepositoryTraining : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19RookMotionWatchLink23RepositoryTrainingTypes")
@interface RepositoryTrainingTypes : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The <code>RepositoryUser</code> class handle the request and storage of the user information in the local data base and the rook API.
/// some of the methods of this class need a user stored in the local data base
/// The  methos available in this class are:
/// <ol>
///   <li>
///     checkUserRookMotion
///   </li>
///   <li>
///     getUserInfo
///   </li>
///   <li>
///     updateUser
///   </li>
///   <li>
///     addUserPhysiologicalVariables
///   </li>
/// </ol>
SWIFT_CLASS("_TtC19RookMotionWatchLink14RepositoryUser")
@interface RepositoryUser : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("RookAuxiliarSummary")
@interface RookAuxiliarSummary : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class RookTraining;

@interface RookAuxiliarSummary (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic) int32_t hrElements;
@property (nonatomic) int64_t hrAccumulated;
@property (nonatomic) int32_t effortElements;
@property (nonatomic) int64_t effortAccumulated;
@property (nonatomic) int32_t cadenceElements;
@property (nonatomic) int64_t cadenceAccumulated;
@property (nonatomic, strong) RookTraining * _Nullable rookTraining;
@end


SWIFT_CLASS_NAMED("RookHeartRateRecords")
@interface RookHeartRateRecords : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookHeartRateRecords (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nullable timeStamp;
@property (nonatomic) int16_t heartRate;
@property (nonatomic) float calories;
@property (nonatomic) float effort;
@property (nonatomic, copy) NSString * _Nullable start;
@property (nonatomic) float heartRateVariability;
@property (nonatomic, strong) RookTraining * _Nullable rookTraining;
@end


SWIFT_CLASS_NAMED("RookPhysiolocalVariables")
@interface RookPhysiolocalVariables : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class RookUser;

@interface RookPhysiolocalVariables (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nonnull height;
@property (nonatomic, copy) NSString * _Nonnull restingHeartRate;
@property (nonatomic, copy) NSString * _Nonnull wieght;
@property (nonatomic, strong) RookUser * _Nullable user;
@end


SWIFT_CLASS_NAMED("RookRemoteClass")
@interface RookRemoteClass : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookRemoteClass (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nullable classUUID;
@property (nonatomic, copy) NSString * _Nullable roomUUID;
@property (nonatomic, copy) NSString * _Nullable trainingName;
@property (nonatomic) int32_t classDelay;
@property (nonatomic) BOOL useSteps;
@property (nonatomic, copy) NSString * _Nullable stepOptions;
@property (nonatomic, strong) RookTraining * _Nullable rookTraining;
@end


SWIFT_CLASS_NAMED("RookSensor")
@interface RookSensor : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class NSDate;

@interface RookSensor (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nonnull sensorName;
@property (nonatomic, copy) NSString * _Nullable sensorUUID;
@property (nonatomic, copy) NSString * _Nullable sensorMac;
@property (nonatomic, copy) NSDate * _Nullable updatedAt;
@property (nonatomic, copy) NSString * _Nonnull ownershipType;
@end


SWIFT_CLASS_NAMED("RookStepRecords")
@interface RookStepRecords : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookStepRecords (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nullable timeStamp;
@property (nonatomic) float cadence;
@property (nonatomic) int64_t steps;
@property (nonatomic, copy) NSString * _Nullable start;
@property (nonatomic, strong) RookTraining * _Nullable rookTraining;
@end


SWIFT_CLASS_NAMED("RookTraining")
@interface RookTraining : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class NSSet;

@interface RookTraining (SWIFT_EXTENSION(RookMotionWatchLink))
- (void)addRookHeartRateRecordsObject:(RookHeartRateRecords * _Nonnull)value;
- (void)removeRookHeartRateRecordsObject:(RookHeartRateRecords * _Nonnull)value;
- (void)addRookHeartRateRecords:(NSSet * _Nonnull)values;
- (void)removeRookHeartRateRecords:(NSSet * _Nonnull)values;
@end


@interface RookTraining (SWIFT_EXTENSION(RookMotionWatchLink))
- (void)addRookStepRecordsObject:(RookStepRecords * _Nonnull)value;
- (void)removeRookStepRecordsObject:(RookStepRecords * _Nonnull)value;
- (void)addRookStepRecords:(NSSet * _Nonnull)values;
- (void)removeRookStepRecords:(NSSet * _Nonnull)values;
@end

@class RookTrainingSummaries;

@interface RookTraining (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nullable start;
@property (nonatomic, copy) NSString * _Nullable end;
@property (nonatomic, copy) NSString * _Nullable trainingTypeUUID;
@property (nonatomic, copy) NSString * _Nullable sensorUUID;
@property (nonatomic, copy) NSString * _Nullable sensorName;
@property (nonatomic, copy) NSString * _Nullable deviceType;
@property (nonatomic, copy) NSString * _Nullable uploadedAt;
@property (nonatomic) int16_t grupalMode;
@property (nonatomic, copy) NSString * _Nullable offset;
@property (nonatomic, strong) RookAuxiliarSummary * _Nullable rookAuxiliarSummary;
@property (nonatomic, strong) RookTrainingSummaries * _Nullable rookTrainingSummaries;
@property (nonatomic, strong) NSSet * _Nullable rookHeartRateRecords;
@property (nonatomic, strong) NSSet * _Nullable rookStepRecords;
@property (nonatomic, strong) RookRemoteClass * _Nullable rookRemoteClass;
@end


SWIFT_CLASS_NAMED("RookTrainingSummaries")
@interface RookTrainingSummaries : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookTrainingSummaries (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic) int64_t durationTimeTot;
@property (nonatomic) float z1Time;
@property (nonatomic) float z2Time;
@property (nonatomic) float z3Time;
@property (nonatomic) float z4Time;
@property (nonatomic) float z5Time;
@property (nonatomic) int64_t hrMax;
@property (nonatomic) int64_t hrAvg;
@property (nonatomic) int64_t hrMin;
@property (nonatomic) int64_t effortMax;
@property (nonatomic) int64_t effortAvg;
@property (nonatomic) int64_t effortMin;
@property (nonatomic) int64_t calories;
@property (nonatomic) float z1Calories;
@property (nonatomic) float z2Calories;
@property (nonatomic) float z3Calories;
@property (nonatomic) float z4Calories;
@property (nonatomic) float z5Calories;
@property (nonatomic) int64_t stepsTotal;
@property (nonatomic) int64_t z1Steps;
@property (nonatomic) int64_t z2Steps;
@property (nonatomic) int64_t z3Steps;
@property (nonatomic) int64_t z4Steps;
@property (nonatomic) int64_t z5Steps;
@property (nonatomic) float cadenceMax;
@property (nonatomic) float cadenceAvg;
@property (nonatomic) float cadenceMin;
@property (nonatomic) int64_t z1Cadence;
@property (nonatomic) int64_t z2Cadence;
@property (nonatomic) int64_t z3Cadence;
@property (nonatomic) int64_t z4Cadence;
@property (nonatomic) int64_t z5Cadence;
@property (nonatomic, strong) RookTraining * _Nullable rookTraining;
@end


SWIFT_CLASS_NAMED("RookTrainingType")
@interface RookTrainingType : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class RookUseSteps;

@interface RookTrainingType (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nullable uuid;
@property (nonatomic, copy) NSString * _Nullable trainigName;
@property (nonatomic) BOOL useHeartRate;
@property (nonatomic) BOOL useCycling;
@property (nonatomic) BOOL useGps;
@property (nonatomic, strong) RookUseSteps * _Nullable useSteps;
@end


SWIFT_CLASS_NAMED("RookUseSteps")
@interface RookUseSteps : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookUseSteps (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic) BOOL enable;
@property (nonatomic, copy) NSString * _Nullable stepTypes;
@property (nonatomic, strong) RookTrainingType * _Nullable trainingType;
@end


SWIFT_CLASS_NAMED("RookUser")
@interface RookUser : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookUser (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nonnull userUUID;
@property (nonatomic, copy) NSString * _Nullable userToken;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, copy) NSString * _Nullable pseudonym;
@property (nonatomic, copy) NSString * _Nonnull userEmail;
@property (nonatomic, copy) NSString * _Nullable userImage;
@property (nonatomic, strong) RookPhysiolocalVariables * _Nullable physiologicalVariables;
@end


SWIFT_CLASS_NAMED("RookUserIndexes")
@interface RookUserIndexes : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookUserIndexes (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic) float a;
@property (nonatomic) float b;
@property (nonatomic) float c;
@property (nonatomic) float d;
@property (nonatomic) float e;
@property (nonatomic) float f;
@property (nonatomic) float g;
@property (nonatomic) float h;
@end


SWIFT_CLASS("_TtC19RookMotionWatchLink14WorkoutManager")
@interface WorkoutManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class HKWorkoutSession;
@class HKWorkoutEvent;

@interface WorkoutManager (SWIFT_EXTENSION(RookMotionWatchLink)) <HKWorkoutSessionDelegate>
- (void)workoutSession:(HKWorkoutSession * _Nonnull)workoutSession didChangeToState:(HKWorkoutSessionState)toState fromState:(HKWorkoutSessionState)fromState date:(NSDate * _Nonnull)date;
- (void)workoutSession:(HKWorkoutSession * _Nonnull)workoutSession didFailWithError:(NSError * _Nonnull)error;
- (void)workoutSession:(HKWorkoutSession * _Nonnull)workoutSession didGenerateEvent:(HKWorkoutEvent * _Nonnull)event;
@end

@class HKLiveWorkoutBuilder;
@class HKSampleType;

@interface WorkoutManager (SWIFT_EXTENSION(RookMotionWatchLink)) <HKLiveWorkoutBuilderDelegate>
- (void)workoutBuilder:(HKLiveWorkoutBuilder * _Nonnull)workoutBuilder didCollectDataOfTypes:(NSSet<HKSampleType *> * _Nonnull)collectedTypes;
- (void)workoutBuilderDidCollectEvent:(HKLiveWorkoutBuilder * _Nonnull)workoutBuilder;
@end




@interface WorkoutManager (SWIFT_EXTENSION(RookMotionWatchLink)) <RemoteEvents>
- (void)userBannedFromClass;
- (void)classHasFinished;
- (void)internetProblems;
- (void)realtimeDataSended;
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
#ifndef ROOKMOTIONWATCHLINK_SWIFT_H
#define ROOKMOTIONWATCHLINK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import Foundation;
@import HealthKit;
@import ObjectiveC;
@import WatchConnectivity;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RookMotionWatchLink",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

SWIFT_CLASS("_TtC19RookMotionWatchLink20AuthorizationManager")
@interface AuthorizationManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19RookMotionWatchLink15BackGroundTasks")
@interface BackGroundTasks : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC19RookMotionWatchLink18RWClientValidation")
@interface RWClientValidation : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class WCSession;
@class NSString;

SWIFT_PROTOCOL("_TtP19RookMotionWatchLink23RWCommunicationDelegate_")
@protocol RWCommunicationDelegate
- (void)session:(WCSession * _Nonnull)session messageData:(NSDictionary<NSString *, id> * _Nonnull)messageData;
- (void)session:(WCSession * _Nonnull)session userInfo:(NSDictionary<NSString *, id> * _Nonnull)userInfo;
@optional
- (void)session:(WCSession * _Nonnull)session message:(NSDictionary<NSString *, id> * _Nonnull)message;
- (void)userInfoSaved:(WCSession * _Nonnull)session watchMessage:(NSDictionary<NSString *, id> * _Nonnull)watchMessage;
@end


SWIFT_CLASS("_TtC19RookMotionWatchLink22RWCommunicationManager")
@interface RWCommunicationManager : NSObject <WCSessionDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)session:(WCSession * _Nonnull)session activationDidCompleteWithState:(WCSessionActivationState)activationState error:(NSError * _Nullable)error;
- (void)session:(WCSession * _Nonnull)session didReceiveUserInfo:(NSDictionary<NSString *, id> * _Nonnull)userInfo;
- (void)session:(WCSession * _Nonnull)session didReceiveMessage:(NSDictionary<NSString *, id> * _Nonnull)message replyHandler:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull))replyHandler;
@end


SWIFT_PROTOCOL("_TtP19RookMotionWatchLink12RemoteEvents_")
@protocol RemoteEvents
- (void)userBannedFromClass;
- (void)classHasFinished;
@optional
- (void)internetProblems;
- (void)realtimeDataSended;
@end


SWIFT_CLASS("_TtC19RookMotionWatchLink12RemoteRouter")
@interface RemoteRouter : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19RookMotionWatchLink19ReposiryUserIndexes")
@interface ReposiryUserIndexes : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The <code>RepositoryTraining</code> class handle the request and storage of the information in the local data base.
/// To use this class first a user have to be stored in the local data base. If there is not user stored, the methods will fail
/// The next methos are available:
/// <ol>
///   <li>
///     addSensor
///   </li>
///   <li>
///     uploadPendingSensors
///   </li>
///   <li>
///     getUserSensors
///   </li>
///   <li>
///     getSensorUUID
///   </li>
///   <li>
///     uploadPendingTrainings
///   </li>
/// </ol>
SWIFT_CLASS("_TtC19RookMotionWatchLink18RepositoryTraining")
@interface RepositoryTraining : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19RookMotionWatchLink23RepositoryTrainingTypes")
@interface RepositoryTrainingTypes : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The <code>RepositoryUser</code> class handle the request and storage of the user information in the local data base and the rook API.
/// some of the methods of this class need a user stored in the local data base
/// The  methos available in this class are:
/// <ol>
///   <li>
///     checkUserRookMotion
///   </li>
///   <li>
///     getUserInfo
///   </li>
///   <li>
///     updateUser
///   </li>
///   <li>
///     addUserPhysiologicalVariables
///   </li>
/// </ol>
SWIFT_CLASS("_TtC19RookMotionWatchLink14RepositoryUser")
@interface RepositoryUser : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("RookAuxiliarSummary")
@interface RookAuxiliarSummary : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class RookTraining;

@interface RookAuxiliarSummary (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic) int32_t hrElements;
@property (nonatomic) int64_t hrAccumulated;
@property (nonatomic) int32_t effortElements;
@property (nonatomic) int64_t effortAccumulated;
@property (nonatomic) int32_t cadenceElements;
@property (nonatomic) int64_t cadenceAccumulated;
@property (nonatomic, strong) RookTraining * _Nullable rookTraining;
@end


SWIFT_CLASS_NAMED("RookHeartRateRecords")
@interface RookHeartRateRecords : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookHeartRateRecords (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nullable timeStamp;
@property (nonatomic) int16_t heartRate;
@property (nonatomic) float calories;
@property (nonatomic) float effort;
@property (nonatomic, copy) NSString * _Nullable start;
@property (nonatomic) float heartRateVariability;
@property (nonatomic, strong) RookTraining * _Nullable rookTraining;
@end


SWIFT_CLASS_NAMED("RookPhysiolocalVariables")
@interface RookPhysiolocalVariables : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class RookUser;

@interface RookPhysiolocalVariables (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nonnull height;
@property (nonatomic, copy) NSString * _Nonnull restingHeartRate;
@property (nonatomic, copy) NSString * _Nonnull wieght;
@property (nonatomic, strong) RookUser * _Nullable user;
@end


SWIFT_CLASS_NAMED("RookRemoteClass")
@interface RookRemoteClass : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookRemoteClass (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nullable classUUID;
@property (nonatomic, copy) NSString * _Nullable roomUUID;
@property (nonatomic, copy) NSString * _Nullable trainingName;
@property (nonatomic) int32_t classDelay;
@property (nonatomic) BOOL useSteps;
@property (nonatomic, copy) NSString * _Nullable stepOptions;
@property (nonatomic, strong) RookTraining * _Nullable rookTraining;
@end


SWIFT_CLASS_NAMED("RookSensor")
@interface RookSensor : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class NSDate;

@interface RookSensor (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nonnull sensorName;
@property (nonatomic, copy) NSString * _Nullable sensorUUID;
@property (nonatomic, copy) NSString * _Nullable sensorMac;
@property (nonatomic, copy) NSDate * _Nullable updatedAt;
@property (nonatomic, copy) NSString * _Nonnull ownershipType;
@end


SWIFT_CLASS_NAMED("RookStepRecords")
@interface RookStepRecords : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookStepRecords (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nullable timeStamp;
@property (nonatomic) float cadence;
@property (nonatomic) int64_t steps;
@property (nonatomic, copy) NSString * _Nullable start;
@property (nonatomic, strong) RookTraining * _Nullable rookTraining;
@end


SWIFT_CLASS_NAMED("RookTraining")
@interface RookTraining : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class NSSet;

@interface RookTraining (SWIFT_EXTENSION(RookMotionWatchLink))
- (void)addRookHeartRateRecordsObject:(RookHeartRateRecords * _Nonnull)value;
- (void)removeRookHeartRateRecordsObject:(RookHeartRateRecords * _Nonnull)value;
- (void)addRookHeartRateRecords:(NSSet * _Nonnull)values;
- (void)removeRookHeartRateRecords:(NSSet * _Nonnull)values;
@end


@interface RookTraining (SWIFT_EXTENSION(RookMotionWatchLink))
- (void)addRookStepRecordsObject:(RookStepRecords * _Nonnull)value;
- (void)removeRookStepRecordsObject:(RookStepRecords * _Nonnull)value;
- (void)addRookStepRecords:(NSSet * _Nonnull)values;
- (void)removeRookStepRecords:(NSSet * _Nonnull)values;
@end

@class RookTrainingSummaries;

@interface RookTraining (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nullable start;
@property (nonatomic, copy) NSString * _Nullable end;
@property (nonatomic, copy) NSString * _Nullable trainingTypeUUID;
@property (nonatomic, copy) NSString * _Nullable sensorUUID;
@property (nonatomic, copy) NSString * _Nullable sensorName;
@property (nonatomic, copy) NSString * _Nullable deviceType;
@property (nonatomic, copy) NSString * _Nullable uploadedAt;
@property (nonatomic) int16_t grupalMode;
@property (nonatomic, copy) NSString * _Nullable offset;
@property (nonatomic, strong) RookAuxiliarSummary * _Nullable rookAuxiliarSummary;
@property (nonatomic, strong) RookTrainingSummaries * _Nullable rookTrainingSummaries;
@property (nonatomic, strong) NSSet * _Nullable rookHeartRateRecords;
@property (nonatomic, strong) NSSet * _Nullable rookStepRecords;
@property (nonatomic, strong) RookRemoteClass * _Nullable rookRemoteClass;
@end


SWIFT_CLASS_NAMED("RookTrainingSummaries")
@interface RookTrainingSummaries : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookTrainingSummaries (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic) int64_t durationTimeTot;
@property (nonatomic) float z1Time;
@property (nonatomic) float z2Time;
@property (nonatomic) float z3Time;
@property (nonatomic) float z4Time;
@property (nonatomic) float z5Time;
@property (nonatomic) int64_t hrMax;
@property (nonatomic) int64_t hrAvg;
@property (nonatomic) int64_t hrMin;
@property (nonatomic) int64_t effortMax;
@property (nonatomic) int64_t effortAvg;
@property (nonatomic) int64_t effortMin;
@property (nonatomic) int64_t calories;
@property (nonatomic) float z1Calories;
@property (nonatomic) float z2Calories;
@property (nonatomic) float z3Calories;
@property (nonatomic) float z4Calories;
@property (nonatomic) float z5Calories;
@property (nonatomic) int64_t stepsTotal;
@property (nonatomic) int64_t z1Steps;
@property (nonatomic) int64_t z2Steps;
@property (nonatomic) int64_t z3Steps;
@property (nonatomic) int64_t z4Steps;
@property (nonatomic) int64_t z5Steps;
@property (nonatomic) float cadenceMax;
@property (nonatomic) float cadenceAvg;
@property (nonatomic) float cadenceMin;
@property (nonatomic) int64_t z1Cadence;
@property (nonatomic) int64_t z2Cadence;
@property (nonatomic) int64_t z3Cadence;
@property (nonatomic) int64_t z4Cadence;
@property (nonatomic) int64_t z5Cadence;
@property (nonatomic, strong) RookTraining * _Nullable rookTraining;
@end


SWIFT_CLASS_NAMED("RookTrainingType")
@interface RookTrainingType : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class RookUseSteps;

@interface RookTrainingType (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nullable uuid;
@property (nonatomic, copy) NSString * _Nullable trainigName;
@property (nonatomic) BOOL useHeartRate;
@property (nonatomic) BOOL useCycling;
@property (nonatomic) BOOL useGps;
@property (nonatomic, strong) RookUseSteps * _Nullable useSteps;
@end


SWIFT_CLASS_NAMED("RookUseSteps")
@interface RookUseSteps : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookUseSteps (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic) BOOL enable;
@property (nonatomic, copy) NSString * _Nullable stepTypes;
@property (nonatomic, strong) RookTrainingType * _Nullable trainingType;
@end


SWIFT_CLASS_NAMED("RookUser")
@interface RookUser : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookUser (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nonnull userUUID;
@property (nonatomic, copy) NSString * _Nullable userToken;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, copy) NSString * _Nullable pseudonym;
@property (nonatomic, copy) NSString * _Nonnull userEmail;
@property (nonatomic, copy) NSString * _Nullable userImage;
@property (nonatomic, strong) RookPhysiolocalVariables * _Nullable physiologicalVariables;
@end


SWIFT_CLASS_NAMED("RookUserIndexes")
@interface RookUserIndexes : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookUserIndexes (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic) float a;
@property (nonatomic) float b;
@property (nonatomic) float c;
@property (nonatomic) float d;
@property (nonatomic) float e;
@property (nonatomic) float f;
@property (nonatomic) float g;
@property (nonatomic) float h;
@end


SWIFT_CLASS("_TtC19RookMotionWatchLink14WorkoutManager")
@interface WorkoutManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class HKWorkoutSession;
@class HKWorkoutEvent;

@interface WorkoutManager (SWIFT_EXTENSION(RookMotionWatchLink)) <HKWorkoutSessionDelegate>
- (void)workoutSession:(HKWorkoutSession * _Nonnull)workoutSession didChangeToState:(HKWorkoutSessionState)toState fromState:(HKWorkoutSessionState)fromState date:(NSDate * _Nonnull)date;
- (void)workoutSession:(HKWorkoutSession * _Nonnull)workoutSession didFailWithError:(NSError * _Nonnull)error;
- (void)workoutSession:(HKWorkoutSession * _Nonnull)workoutSession didGenerateEvent:(HKWorkoutEvent * _Nonnull)event;
@end

@class HKLiveWorkoutBuilder;
@class HKSampleType;

@interface WorkoutManager (SWIFT_EXTENSION(RookMotionWatchLink)) <HKLiveWorkoutBuilderDelegate>
- (void)workoutBuilder:(HKLiveWorkoutBuilder * _Nonnull)workoutBuilder didCollectDataOfTypes:(NSSet<HKSampleType *> * _Nonnull)collectedTypes;
- (void)workoutBuilderDidCollectEvent:(HKLiveWorkoutBuilder * _Nonnull)workoutBuilder;
@end




@interface WorkoutManager (SWIFT_EXTENSION(RookMotionWatchLink)) <RemoteEvents>
- (void)userBannedFromClass;
- (void)classHasFinished;
- (void)internetProblems;
- (void)realtimeDataSended;
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__i386__) && __i386__
// Generated by Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
#ifndef ROOKMOTIONWATCHLINK_SWIFT_H
#define ROOKMOTIONWATCHLINK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import Foundation;
@import HealthKit;
@import ObjectiveC;
@import WatchConnectivity;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RookMotionWatchLink",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

SWIFT_CLASS("_TtC19RookMotionWatchLink20AuthorizationManager")
@interface AuthorizationManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19RookMotionWatchLink15BackGroundTasks")
@interface BackGroundTasks : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC19RookMotionWatchLink18RWClientValidation")
@interface RWClientValidation : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class WCSession;
@class NSString;

SWIFT_PROTOCOL("_TtP19RookMotionWatchLink23RWCommunicationDelegate_")
@protocol RWCommunicationDelegate
- (void)session:(WCSession * _Nonnull)session messageData:(NSDictionary<NSString *, id> * _Nonnull)messageData;
- (void)session:(WCSession * _Nonnull)session userInfo:(NSDictionary<NSString *, id> * _Nonnull)userInfo;
@optional
- (void)session:(WCSession * _Nonnull)session message:(NSDictionary<NSString *, id> * _Nonnull)message;
- (void)userInfoSaved:(WCSession * _Nonnull)session watchMessage:(NSDictionary<NSString *, id> * _Nonnull)watchMessage;
@end


SWIFT_CLASS("_TtC19RookMotionWatchLink22RWCommunicationManager")
@interface RWCommunicationManager : NSObject <WCSessionDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)session:(WCSession * _Nonnull)session activationDidCompleteWithState:(WCSessionActivationState)activationState error:(NSError * _Nullable)error;
- (void)session:(WCSession * _Nonnull)session didReceiveUserInfo:(NSDictionary<NSString *, id> * _Nonnull)userInfo;
- (void)session:(WCSession * _Nonnull)session didReceiveMessage:(NSDictionary<NSString *, id> * _Nonnull)message replyHandler:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull))replyHandler;
@end


SWIFT_PROTOCOL("_TtP19RookMotionWatchLink12RemoteEvents_")
@protocol RemoteEvents
- (void)userBannedFromClass;
- (void)classHasFinished;
@optional
- (void)internetProblems;
- (void)realtimeDataSended;
@end


SWIFT_CLASS("_TtC19RookMotionWatchLink12RemoteRouter")
@interface RemoteRouter : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19RookMotionWatchLink19ReposiryUserIndexes")
@interface ReposiryUserIndexes : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The <code>RepositoryTraining</code> class handle the request and storage of the information in the local data base.
/// To use this class first a user have to be stored in the local data base. If there is not user stored, the methods will fail
/// The next methos are available:
/// <ol>
///   <li>
///     addSensor
///   </li>
///   <li>
///     uploadPendingSensors
///   </li>
///   <li>
///     getUserSensors
///   </li>
///   <li>
///     getSensorUUID
///   </li>
///   <li>
///     uploadPendingTrainings
///   </li>
/// </ol>
SWIFT_CLASS("_TtC19RookMotionWatchLink18RepositoryTraining")
@interface RepositoryTraining : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19RookMotionWatchLink23RepositoryTrainingTypes")
@interface RepositoryTrainingTypes : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The <code>RepositoryUser</code> class handle the request and storage of the user information in the local data base and the rook API.
/// some of the methods of this class need a user stored in the local data base
/// The  methos available in this class are:
/// <ol>
///   <li>
///     checkUserRookMotion
///   </li>
///   <li>
///     getUserInfo
///   </li>
///   <li>
///     updateUser
///   </li>
///   <li>
///     addUserPhysiologicalVariables
///   </li>
/// </ol>
SWIFT_CLASS("_TtC19RookMotionWatchLink14RepositoryUser")
@interface RepositoryUser : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("RookAuxiliarSummary")
@interface RookAuxiliarSummary : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class RookTraining;

@interface RookAuxiliarSummary (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic) int32_t hrElements;
@property (nonatomic) int64_t hrAccumulated;
@property (nonatomic) int32_t effortElements;
@property (nonatomic) int64_t effortAccumulated;
@property (nonatomic) int32_t cadenceElements;
@property (nonatomic) int64_t cadenceAccumulated;
@property (nonatomic, strong) RookTraining * _Nullable rookTraining;
@end


SWIFT_CLASS_NAMED("RookHeartRateRecords")
@interface RookHeartRateRecords : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookHeartRateRecords (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nullable timeStamp;
@property (nonatomic) int16_t heartRate;
@property (nonatomic) float calories;
@property (nonatomic) float effort;
@property (nonatomic, copy) NSString * _Nullable start;
@property (nonatomic) float heartRateVariability;
@property (nonatomic, strong) RookTraining * _Nullable rookTraining;
@end


SWIFT_CLASS_NAMED("RookPhysiolocalVariables")
@interface RookPhysiolocalVariables : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class RookUser;

@interface RookPhysiolocalVariables (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nonnull height;
@property (nonatomic, copy) NSString * _Nonnull restingHeartRate;
@property (nonatomic, copy) NSString * _Nonnull wieght;
@property (nonatomic, strong) RookUser * _Nullable user;
@end


SWIFT_CLASS_NAMED("RookRemoteClass")
@interface RookRemoteClass : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookRemoteClass (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nullable classUUID;
@property (nonatomic, copy) NSString * _Nullable roomUUID;
@property (nonatomic, copy) NSString * _Nullable trainingName;
@property (nonatomic) int32_t classDelay;
@property (nonatomic) BOOL useSteps;
@property (nonatomic, copy) NSString * _Nullable stepOptions;
@property (nonatomic, strong) RookTraining * _Nullable rookTraining;
@end


SWIFT_CLASS_NAMED("RookSensor")
@interface RookSensor : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class NSDate;

@interface RookSensor (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nonnull sensorName;
@property (nonatomic, copy) NSString * _Nullable sensorUUID;
@property (nonatomic, copy) NSString * _Nullable sensorMac;
@property (nonatomic, copy) NSDate * _Nullable updatedAt;
@property (nonatomic, copy) NSString * _Nonnull ownershipType;
@end


SWIFT_CLASS_NAMED("RookStepRecords")
@interface RookStepRecords : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookStepRecords (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nullable timeStamp;
@property (nonatomic) float cadence;
@property (nonatomic) int64_t steps;
@property (nonatomic, copy) NSString * _Nullable start;
@property (nonatomic, strong) RookTraining * _Nullable rookTraining;
@end


SWIFT_CLASS_NAMED("RookTraining")
@interface RookTraining : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class NSSet;

@interface RookTraining (SWIFT_EXTENSION(RookMotionWatchLink))
- (void)addRookHeartRateRecordsObject:(RookHeartRateRecords * _Nonnull)value;
- (void)removeRookHeartRateRecordsObject:(RookHeartRateRecords * _Nonnull)value;
- (void)addRookHeartRateRecords:(NSSet * _Nonnull)values;
- (void)removeRookHeartRateRecords:(NSSet * _Nonnull)values;
@end


@interface RookTraining (SWIFT_EXTENSION(RookMotionWatchLink))
- (void)addRookStepRecordsObject:(RookStepRecords * _Nonnull)value;
- (void)removeRookStepRecordsObject:(RookStepRecords * _Nonnull)value;
- (void)addRookStepRecords:(NSSet * _Nonnull)values;
- (void)removeRookStepRecords:(NSSet * _Nonnull)values;
@end

@class RookTrainingSummaries;

@interface RookTraining (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nullable start;
@property (nonatomic, copy) NSString * _Nullable end;
@property (nonatomic, copy) NSString * _Nullable trainingTypeUUID;
@property (nonatomic, copy) NSString * _Nullable sensorUUID;
@property (nonatomic, copy) NSString * _Nullable sensorName;
@property (nonatomic, copy) NSString * _Nullable deviceType;
@property (nonatomic, copy) NSString * _Nullable uploadedAt;
@property (nonatomic) int16_t grupalMode;
@property (nonatomic, copy) NSString * _Nullable offset;
@property (nonatomic, strong) RookAuxiliarSummary * _Nullable rookAuxiliarSummary;
@property (nonatomic, strong) RookTrainingSummaries * _Nullable rookTrainingSummaries;
@property (nonatomic, strong) NSSet * _Nullable rookHeartRateRecords;
@property (nonatomic, strong) NSSet * _Nullable rookStepRecords;
@property (nonatomic, strong) RookRemoteClass * _Nullable rookRemoteClass;
@end


SWIFT_CLASS_NAMED("RookTrainingSummaries")
@interface RookTrainingSummaries : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookTrainingSummaries (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic) int64_t durationTimeTot;
@property (nonatomic) float z1Time;
@property (nonatomic) float z2Time;
@property (nonatomic) float z3Time;
@property (nonatomic) float z4Time;
@property (nonatomic) float z5Time;
@property (nonatomic) int64_t hrMax;
@property (nonatomic) int64_t hrAvg;
@property (nonatomic) int64_t hrMin;
@property (nonatomic) int64_t effortMax;
@property (nonatomic) int64_t effortAvg;
@property (nonatomic) int64_t effortMin;
@property (nonatomic) int64_t calories;
@property (nonatomic) float z1Calories;
@property (nonatomic) float z2Calories;
@property (nonatomic) float z3Calories;
@property (nonatomic) float z4Calories;
@property (nonatomic) float z5Calories;
@property (nonatomic) int64_t stepsTotal;
@property (nonatomic) int64_t z1Steps;
@property (nonatomic) int64_t z2Steps;
@property (nonatomic) int64_t z3Steps;
@property (nonatomic) int64_t z4Steps;
@property (nonatomic) int64_t z5Steps;
@property (nonatomic) float cadenceMax;
@property (nonatomic) float cadenceAvg;
@property (nonatomic) float cadenceMin;
@property (nonatomic) int64_t z1Cadence;
@property (nonatomic) int64_t z2Cadence;
@property (nonatomic) int64_t z3Cadence;
@property (nonatomic) int64_t z4Cadence;
@property (nonatomic) int64_t z5Cadence;
@property (nonatomic, strong) RookTraining * _Nullable rookTraining;
@end


SWIFT_CLASS_NAMED("RookTrainingType")
@interface RookTrainingType : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class RookUseSteps;

@interface RookTrainingType (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nullable uuid;
@property (nonatomic, copy) NSString * _Nullable trainigName;
@property (nonatomic) BOOL useHeartRate;
@property (nonatomic) BOOL useCycling;
@property (nonatomic) BOOL useGps;
@property (nonatomic, strong) RookUseSteps * _Nullable useSteps;
@end


SWIFT_CLASS_NAMED("RookUseSteps")
@interface RookUseSteps : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookUseSteps (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic) BOOL enable;
@property (nonatomic, copy) NSString * _Nullable stepTypes;
@property (nonatomic, strong) RookTrainingType * _Nullable trainingType;
@end


SWIFT_CLASS_NAMED("RookUser")
@interface RookUser : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookUser (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic, copy) NSString * _Nonnull userUUID;
@property (nonatomic, copy) NSString * _Nullable userToken;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, copy) NSString * _Nullable pseudonym;
@property (nonatomic, copy) NSString * _Nonnull userEmail;
@property (nonatomic, copy) NSString * _Nullable userImage;
@property (nonatomic, strong) RookPhysiolocalVariables * _Nullable physiologicalVariables;
@end


SWIFT_CLASS_NAMED("RookUserIndexes")
@interface RookUserIndexes : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RookUserIndexes (SWIFT_EXTENSION(RookMotionWatchLink))
@property (nonatomic) float a;
@property (nonatomic) float b;
@property (nonatomic) float c;
@property (nonatomic) float d;
@property (nonatomic) float e;
@property (nonatomic) float f;
@property (nonatomic) float g;
@property (nonatomic) float h;
@end


SWIFT_CLASS("_TtC19RookMotionWatchLink14WorkoutManager")
@interface WorkoutManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class HKWorkoutSession;
@class HKWorkoutEvent;

@interface WorkoutManager (SWIFT_EXTENSION(RookMotionWatchLink)) <HKWorkoutSessionDelegate>
- (void)workoutSession:(HKWorkoutSession * _Nonnull)workoutSession didChangeToState:(HKWorkoutSessionState)toState fromState:(HKWorkoutSessionState)fromState date:(NSDate * _Nonnull)date;
- (void)workoutSession:(HKWorkoutSession * _Nonnull)workoutSession didFailWithError:(NSError * _Nonnull)error;
- (void)workoutSession:(HKWorkoutSession * _Nonnull)workoutSession didGenerateEvent:(HKWorkoutEvent * _Nonnull)event;
@end

@class HKLiveWorkoutBuilder;
@class HKSampleType;

@interface WorkoutManager (SWIFT_EXTENSION(RookMotionWatchLink)) <HKLiveWorkoutBuilderDelegate>
- (void)workoutBuilder:(HKLiveWorkoutBuilder * _Nonnull)workoutBuilder didCollectDataOfTypes:(NSSet<HKSampleType *> * _Nonnull)collectedTypes;
- (void)workoutBuilderDidCollectEvent:(HKLiveWorkoutBuilder * _Nonnull)workoutBuilder;
@end




@interface WorkoutManager (SWIFT_EXTENSION(RookMotionWatchLink)) <RemoteEvents>
- (void)userBannedFromClass;
- (void)classHasFinished;
- (void)internetProblems;
- (void)realtimeDataSended;
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
